{"ast":null,"code":"var _jsxFileName = \"/Users/Mousumi/Desktop/star-wars/src/myComponent/People.jsx\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../Redux/Datapassing';\nimport './People.css';\n\nconst People = () => {\n  const [people, setPeople] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const [sort, setSort] = useState(\"\");\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const fetchPeople = async () => {\n    let dataList = [];\n    {\n      let apiCall = await fetch('https://swapi.dev/api/people/');\n      let data = await apiCall.json();\n      let finalData = data.results;\n      finalData.forEach(el => {\n        dataList.unshift(el);\n        console.log(finalData);\n      });\n    }\n    setPeople(dataList);\n    setLoading(false);\n    setError(error);\n  };\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }\n    }, \"error:\", error.message);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n\n  const peopleData = people.map(xxx => {\n    const addToFavourite = () => dispatch(actions.addToFavourite(xxx));\n\n    if (sort.length !== 0) {\n      if (xxx.name.toUpperCase().match(sort.toUpperCase()) || xxx.birth_year.toString().match(sort.toString()) || xxx.eye_color.toString().match(sort.toString()) || xxx.skin_color.toString().match(sort.toString())) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: xxx.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        }, \"Name:\", xxx.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }, \"Birth-Year:\", xxx.birth_year), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        }, \"Eye-color:\", xxx.eye_color), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, \"Skin-color:\", xxx.skin_color), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: addToFavourite,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, \"Add To Favourite\"));\n      } else {\n        return null;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"borderbox\",\n      key: xxx.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Name:\", xxx.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Birth-Year:\", xxx.birth_year), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Eye-color:\", xxx.eye_color), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Skin-color:\", xxx.skin_color), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: addToFavourite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Add To Favourite\"));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"SearchProduct\",\n    type: \"text\",\n    placeholder: \"search...\",\n    value: sort,\n    onChange: event => setSort(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favourite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, peopleData));\n};\n\nexport default People;","map":{"version":3,"sources":["/Users/Mousumi/Desktop/star-wars/src/myComponent/People.jsx"],"names":["React","useState","useEffect","useDispatch","actions","People","people","setPeople","loading","setLoading","error","setError","dispatch","sort","setSort","fetchPeople","dataList","apiCall","fetch","data","json","finalData","results","forEach","el","unshift","console","log","message","peopleData","map","xxx","addToFavourite","length","name","toUpperCase","match","birth_year","toString","eye_color","skin_color","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { actions } from '../Redux/Datapassing';\nimport './People.css';\n\n\n\n\n\nconst People = () => {\n  const [people,setPeople]=useState([]);\n  const [loading,setLoading]=useState(true);\n  const [error,setError]=useState(null);\n  const dispatch =useDispatch();\n  const [sort, setSort]=useState(\"\");\n\n  \n  useEffect(()=>{\n    fetchPeople();\n  }, [])\n\n    const fetchPeople = async () => {\n      let dataList = [];\n       {\n              let apiCall = await fetch('https://swapi.dev/api/people/');\n              let data = await apiCall.json();\n              let finalData=data.results;\n              finalData.forEach(el => {dataList.unshift(el);\n                console.log(finalData);\n        });\n      }\n     \n              setPeople(dataList)\n              setLoading(false)\n              setError(error)\n           \n   \n    }\n    if(error){\n      return <div>error:{error.message}</div>\n    }\n\n    \n      if(loading){\n        return <div>Loading...</div>\n      }\n      const peopleData=people.map((xxx)=>{\n        const addToFavourite=()=>dispatch(actions.addToFavourite(xxx))\n        if(sort.length !== 0) {\n          if (xxx.name.toUpperCase().match(sort.toUpperCase())\n          ||(xxx.birth_year.toString().match(sort.toString()))\n          ||(xxx.eye_color.toString().match(sort.toString()))\n          ||(xxx.skin_color.toString().match(sort.toString()))\n          ){\n            return <div key={xxx.name}>\n          <p>Name:{xxx.name}</p>\n          <p>Birth-Year:{xxx.birth_year}</p>\n          <p>Eye-color:{xxx.eye_color}</p>\n          <p>Skin-color:{xxx.skin_color}</p>\n          <button  onClick={addToFavourite}>Add To Favourite</button> \n        </div>\n          }else{\n            return null;\n          }\n        }\n        \n        return <div className=\"borderbox\" key={xxx.name}>\n          <p>Name:{xxx.name}</p>\n          <p>Birth-Year:{xxx.birth_year}</p>\n          <p>Eye-color:{xxx.eye_color}</p>\n          <p>Skin-color:{xxx.skin_color}</p>\n          <button  onClick={addToFavourite}>Add To Favourite</button> \n        </div>\n      })\n      return(\n        <div>\n          <form className=\"center\">\n          <input className=\"SearchProduct\" type=\"text\" placeholder=\"search...\" value={sort} onChange={(event) => setSort(event.target.value)} />\n          </form>\n          <div className=\"favourite\">{peopleData}</div>\n        </div>\n      );\n       \n      }\n\nexport default People;"]},"metadata":{},"sourceType":"module"}