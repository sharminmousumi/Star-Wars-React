{"version":3,"sources":["myComponent/Footer.jsx","myComponent/Navigation.jsx","Redux/Datapassing.js","myComponent/Allfavrt.jsx","myComponent/People.jsx","myComponent/Ownfavrt.jsx","App.js","serviceWorker.js","Redux/rootReducer.js","index.js"],"names":["Footer","className","Navigation","to","addToFavourite","createAction","deleteFavourite","actions","reducer","createReducer","state","action","payload","filter","cartItem","name","Allfavrt","dispatch","useDispatch","peopleData","useSelector","Datapassing","map","xxx","key","birth_year","eye_color","skin_color","onClick","People","useState","people","setPeople","loading","setLoading","error","setError","sort","setSort","useEffect","fetchPeople","a","dataList","fetch","apiCall","json","data","finalData","results","forEach","el","unshift","console","log","message","length","toUpperCase","match","toString","type","placeholder","value","onChange","event","target","Ownfavrt","OwnMadeFavorite","setName","setBirth","setEye","setSkin","onSubmit","preventDefault","required","Home","App","path","exact","component","Boolean","window","location","hostname","rootReducer","combineReducers","cartReducer","store","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"6TAWeA,G,kBARA,WACX,OACI,yBAAMC,UAAU,UACZ,wC,QCeGC,EAjBI,WACf,OAEC,6BACI,wBAAID,UAAU,WACV,kBAAC,IAAD,CAAMA,UAAU,OAAOE,GAAG,KAA1B,QACA,kBAAC,IAAD,CAAMF,UAAU,OAAOE,GAAG,WAA1B,UACA,kBAAC,IAAD,CAAMF,UAAU,OAAOE,GAAG,aAA1B,iBACA,kBAAC,IAAD,CAAMF,UAAU,OAAOE,GAAG,aAA1B,oB,+BCXPC,EAAgBC,YAAa,oBAC7BC,EAAiBD,YAAa,uBAG9BE,EAAU,CAACD,kBAAgBF,kBAIzBI,EAAUC,YAHG,IAGU,mBAC1BL,GAAiB,SAACM,EAAOC,GAAR,4BACJD,GADI,CACGC,EAAOC,aAFD,cAIzBN,GAAkB,SAACI,EAAMC,GAAP,OACjBD,EAAMG,QAAO,SAAAC,GAAQ,OAAIA,EAASC,OAASJ,EAAOC,cAL1B,IC2BhBI,G,MA7BE,WACb,IAAMC,EAASC,YAAY,IAGrBC,EAFgBC,aAAY,SAACV,GAAD,OAAWA,EAAMW,eAEpBC,KAAI,SAACC,GAChC,OAAO,yBAAKtB,UAAU,YAAYuB,IAAKD,EAAIR,MACzC,oCAAUQ,EAAIR,MACd,yCAAeQ,EAAIE,YACnB,wCAAcF,EAAIG,WAClB,yCAAeH,EAAII,YACnB,4BAAQC,QAAS,kBAAMX,EAASV,EAAQD,gBAAgBiB,EAAIR,SAA5D,cAKJ,OACE,6BACE,yBAAKd,UAAU,WACZkB,M,uCC8DEU,G,MA5EA,WAAO,IAAD,EACMC,mBAAS,IADf,mBACZC,EADY,KACLC,EADK,OAEQF,oBAAS,GAFjB,mBAEZG,EAFY,KAEJC,EAFI,OAGIJ,mBAAS,MAHb,mBAGZK,EAHY,KAGNC,EAHM,KAIbnB,EAAUC,cAJG,EAKGY,mBAAS,IALZ,mBAKZO,EALY,KAKNC,EALM,KAQnBC,qBAAU,WACRC,MACC,IAED,IAAMA,EAAW,uCAAG,kCAAAC,EAAA,6DACdC,EAAW,GADG,SAGUC,MAAM,iCAHhB,cAGNC,EAHM,gBAIOA,EAAQC,OAJf,OAINC,EAJM,QAKNC,EAAUD,EAAKE,SACTC,SAAQ,SAAAC,GAAOR,EAASS,QAAQD,GACxCE,QAAQC,IAAIN,MAIdf,EAAUU,GACVR,GAAW,GACXE,EAASD,GAbC,4CAAH,qDAiBjB,GAAGA,EACD,OAAO,sCAAYA,EAAMmB,SAIzB,GAAGrB,EACD,OAAO,2CAET,IAAMd,EAAWY,EAAOT,KAAI,SAACC,GAC3B,IAAMnB,EAAe,kBAAIa,EAASV,EAAQH,eAAemB,KACzD,OAAmB,IAAhBc,EAAKkB,OACFhC,EAAIR,KAAKyC,cAAcC,MAAMpB,EAAKmB,gBACnCjC,EAAIE,WAAWiC,WAAWD,MAAMpB,EAAKqB,aACrCnC,EAAIG,UAAUgC,WAAWD,MAAMpB,EAAKqB,aACpCnC,EAAII,WAAW+B,WAAWD,MAAMpB,EAAKqB,YAE/B,yBAAKlC,IAAKD,EAAIR,MACvB,mCAASQ,EAAIR,MACb,yCAAeQ,EAAIE,YACnB,wCAAcF,EAAIG,WAClB,yCAAeH,EAAII,YACnB,4BAASC,QAASxB,GAAlB,qBAGS,KAIJ,yBAAKH,UAAU,YAAYuB,IAAKD,EAAIR,MACzC,mCAASQ,EAAIR,MACb,yCAAeQ,EAAIE,YACnB,wCAAcF,EAAIG,WAClB,yCAAeH,EAAII,YACnB,4BAASC,QAASxB,GAAlB,wBAGJ,OACE,6BACE,0BAAMH,UAAU,UAChB,2BAAOA,UAAU,gBAAgB0D,KAAK,OAAOC,YAAY,YAAYC,MAAOxB,EAAMyB,SAAU,SAACC,GAAD,OAAWzB,EAAQyB,EAAMC,OAAOH,WAE5H,yBAAK5D,UAAU,aAAakB,MCrBvB8C,G,MApDE,WACf,IAAIC,EAAiB,CACnBnD,KAAK,GACLU,WAAW,GACXC,UAAU,GACVC,WAAW,IAGLV,EAASC,YAAY,IARR,EAWKY,mBAAS,IAXd,mBAWZf,EAXY,KAWNoD,EAXM,OAYYrC,mBAAS,IAZrB,mBAYZL,EAZY,KAYA2C,EAZA,OAaStC,mBAAS,IAblB,mBAaZJ,EAbY,KAaD2C,EAbC,OAcWvC,mBAAS,IAdpB,mBAcZH,EAdY,KAcA2C,EAdA,KA+BnB,OACI,yBAAKrE,UAAU,aACb,0BAAMsE,SAXC,SAAAR,GACXA,EAAMS,iBACNN,EAAgBnD,KAAKA,EACrBmD,EAAgBzC,WAAWA,EAC3ByC,EAAgBxC,UAAUA,EAC1BwC,EAAgBvC,WAAWA,EAC3BV,EAASV,EAAQH,eAAe8D,MAM3B,wCAAoB,6BACpB,2BAAOP,KAAK,OAASc,UAAQ,EAACb,YAAY,OAAOC,MAAO9C,EAAM+C,SAjB5C,SAAAC,GAAK,OAAII,EAAQJ,EAAMC,OAAOH,UAiB2C,6BAC3F,8CAA0B,6BAC1B,2BAAOF,KAAK,SAAUc,UAAQ,EAACb,YAAY,aAAaC,MAAOpC,EAAYqC,SAlBxD,SAAAC,GAAK,OAAIK,EAASL,EAAMC,OAAOH,UAkBuD,6BACzG,6CAAyB,6BACzB,2BAAOF,KAAK,OAAQc,UAAQ,EAACb,YAAY,YAAYC,MAAOnC,EAAWoC,SAnBtD,SAAAC,GAAK,OAAIM,EAAON,EAAMC,OAAOH,UAmBqD,6BACnG,8CAA0B,6BAC1B,2BAAOF,KAAK,OAAQc,UAAQ,EAACb,YAAY,aAAaC,MAAOlC,EAAYmC,SApBvD,SAAAC,GAAK,OAAIO,EAAQP,EAAMC,OAAOH,UAoBsD,6BACtG,4BAAQF,KAAK,SAASE,MAAM,UAA5B,cCpBX,IAAMa,EAAO,kBACX,6BACA,0CAIaC,EAvBf,WACE,OACE,kBAAC,IAAD,KACF,yBAAK1E,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAO2E,KAAK,IAAIC,OAAK,EAACC,UAAWJ,IACjC,kBAAC,IAAD,CAAOE,KAAK,UAAUE,UAAWjD,IACjC,kBAAC,IAAD,CAAO+C,KAAK,YAAYE,UAAW9D,IACnC,kBAAC,IAAD,CAAO4D,KAAK,YAAYE,UAAWb,MAGvC,kBAAC,EAAD,QCbkBc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzB,MACvB,2D,WCbA0B,EAAcC,YAAgB,CAEnC/D,YAAagE,ICGRC,EAAQC,YAAe,CAC5B/E,QAAS2E,IAKVK,IAASC,OAAQ,kBAAC,IAAD,CAAUH,MAAOA,GAAO,kBAAC,EAAD,OAAmBI,SAASC,eAAe,SFmH9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/D,GACLiB,QAAQjB,MAAMA,EAAMmB,c","file":"static/js/main.b6b8fa30.chunk.js","sourcesContent":["import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n    return (\n        <div  className=\"footer\">\n            <p>Footer</p>\n        </div>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst Navigation = () => {\n    return (\n        \n     <nav>\n         <ul className=\"navlink\">\n             <Link className=\"Link\" to=\"/\">Home</Link>\n             <Link className=\"Link\" to=\"/people\">People</Link>\n             <Link className=\"Link\" to=\"/allfavrt\">All Favourite</Link>\n             <Link className=\"Link\" to=\"/Ownfavrt\">Own Favourite</Link>\n            \n         </ul>\n            \n    </nav>\n        \n    );\n};\n\nexport default Navigation;","import { createAction, createReducer } from \"@reduxjs/toolkit\";\nconst addToFavourite= createAction(\"add to favourite\");\nconst deleteFavourite= createAction(\"delete to Favourite\");\n\n\nconst actions = {deleteFavourite,addToFavourite};\nconst initialState = [\n    \n  ];\n  const reducer = createReducer(initialState, {\n    [addToFavourite]: (state, action) => \n              [...state, action.payload ],\n\n     [deleteFavourite]: (state,action) =>\n       state.filter(cartItem => cartItem.name !== action.payload)\n    \n})\n  \n export { actions, reducer };","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch} from 'react-redux';\nimport { actions } from '../Redux/Datapassing';\nimport './AllFav.css';\n\n\nconst Allfavrt = () => {\n    const dispatch=useDispatch('');\n    const favouritedata = useSelector((state) => state.Datapassing);\n    \n    const peopleData=favouritedata.map((xxx)=>{ \n        return <div className=\"borderbox\" key={xxx.name}>\n          <p> Name:{xxx.name}</p>\n          <p>Birth-Year:{xxx.birth_year}</p>\n          <p>Eye-color:{xxx.eye_color}</p>\n          <p>Skin-color:{xxx.skin_color}</p>\n          <button onClick={() => dispatch(actions.deleteFavourite(xxx.name))}>Delete</button> \n        </div>\n      })\n      \n    \n      return(\n        <div>\n          <div className=\"all_fab\">\n            {peopleData}\n            </div>\n          \n        </div>\n      );\n       \n    \n    \n};\n\n\nexport default Allfavrt;\n\n\n\n\n\t","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { actions } from '../Redux/Datapassing';\nimport './People.css';\n\n\n\n\n\nconst People = () => {\n  const [people,setPeople]=useState([]);\n  const [loading,setLoading]=useState(true);\n  const [error,setError]=useState(null);\n  const dispatch =useDispatch();\n  const [sort, setSort]=useState(\"\");\n\n  \n  useEffect(()=>{\n    fetchPeople();\n  }, [])\n\n    const fetchPeople = async () => {\n      let dataList = [];\n       {\n              let apiCall = await fetch('https://swapi.dev/api/people/');\n              let data = await apiCall.json();\n              let finalData=data.results;\n              finalData.forEach(el => {dataList.unshift(el);\n                console.log(finalData);\n        });\n      }\n     \n              setPeople(dataList)\n              setLoading(false)\n              setError(error)\n           \n   \n    }\n    if(error){\n      return <div>error:{error.message}</div>\n    }\n\n    \n      if(loading){\n        return <div>Loading...</div>\n      }\n      const peopleData=people.map((xxx)=>{\n        const addToFavourite=()=>dispatch(actions.addToFavourite(xxx))\n        if(sort.length !== 0) {\n          if (xxx.name.toUpperCase().match(sort.toUpperCase())\n          ||(xxx.birth_year.toString().match(sort.toString()))\n          ||(xxx.eye_color.toString().match(sort.toString()))\n          ||(xxx.skin_color.toString().match(sort.toString()))\n          ){\n            return <div key={xxx.name}>\n          <p>Name:{xxx.name}</p>\n          <p>Birth-Year:{xxx.birth_year}</p>\n          <p>Eye-color:{xxx.eye_color}</p>\n          <p>Skin-color:{xxx.skin_color}</p>\n          <button  onClick={addToFavourite}>Add To Favourite</button> \n        </div>\n          }else{\n            return null;\n          }\n        }\n        \n        return <div className=\"borderbox\" key={xxx.name}>\n          <p>Name:{xxx.name}</p>\n          <p>Birth-Year:{xxx.birth_year}</p>\n          <p>Eye-color:{xxx.eye_color}</p>\n          <p>Skin-color:{xxx.skin_color}</p>\n          <button  onClick={addToFavourite}>Add To Favourite</button> \n        </div>\n      })\n      return(\n        <div>\n          <form className=\"center\">\n          <input className=\"SearchProduct\" type=\"text\" placeholder=\"search...\" value={sort} onChange={(event) => setSort(event.target.value)} />\n          </form>\n          <div className=\"favourite\">{peopleData}</div>\n        </div>\n      );\n       \n      }\n\nexport default People;","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { actions } from '../Redux/Datapassing';\nimport './Ownfav.css';\n\n\n\nconst Ownfavrt = () => {\n  let OwnMadeFavorite ={\n    name:'',\n    birth_year:'',\n    eye_color:'',\n    skin_color:'',\n    \n}\n    const dispatch=useDispatch('');\n    \n\n    const [name, setName] = useState('');\n    const [birth_year, setBirth] = useState('');\n    const [eye_color, setEye] = useState('');\n    const [skin_color, setSkin] = useState('');\n\n      \n    \n    const handleChangeName = event => setName(event.target.value);\n    const handleChangeBirth = event => setBirth(event.target.value);\n    const handleChangeEye = event => setEye(event.target.value);\n    const handleChangeSkin = event => setSkin(event.target.value);\n    const Save = event =>{\n      event.preventDefault();\n      OwnMadeFavorite.name=name;\n      OwnMadeFavorite.birth_year=birth_year;\n      OwnMadeFavorite.eye_color=eye_color;\n      OwnMadeFavorite.skin_color=skin_color;\n      dispatch(actions.addToFavourite(OwnMadeFavorite))\n    }\n      \n    return (\n        <div className=\"container\">\n          <form onSubmit={Save}>\n           <label>Name:</label><br/>\n           <input type=\"text\"   required placeholder=\"Name\" value={name} onChange={handleChangeName}/><br/>\n           <label>Birth-Year:</label><br/>\n           <input type=\"number\"  required placeholder=\"Birth-Year\" value={birth_year} onChange={handleChangeBirth}/><br/>\n           <label>Eye-Color:</label><br/>\n           <input type=\"text\"  required placeholder=\"Eye-Color\" value={eye_color} onChange={handleChangeEye}/><br/>\n           <label>Skin-Color:</label><br/>\n           <input type=\"text\"  required placeholder=\"Skin-Color\" value={skin_color} onChange={handleChangeSkin}/><br/>\n           <button type=\"submit\" value=\"Submit\">Submit</button>\n           </form>\n           \n        \n            \n        </div>\n    );\n    \n};\n\nexport default Ownfavrt;","import React from 'react';\nimport './App.css';\nimport Footer from './myComponent/Footer';\nimport Navigation from './myComponent/Navigation';\nimport Allfavrt from './myComponent/Allfavrt';\nimport { Route,Switch,BrowserRouter as Router } from '../node_modules/react-router-dom';\nimport People from './myComponent/People';\nimport Ownfavrt from './myComponent/Ownfavrt';\n\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n  <div className=\"App\">\n      <Navigation/>\n      <Switch>\n      <Route path=\"/\" exact component={Home}/>\n      <Route path=\"/people\" component={People}/>\n      <Route path=\"/allfavrt\" component={Allfavrt}/>\n      <Route path=\"/Ownfavrt\" component={Ownfavrt}/>\n      </Switch>\n  </div>\n  <Footer/>\n  </Router>\n  \n  );\n}\nconst Home = () =>(\n  <div>\n  <h1>StarWars</h1>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\n//import feature reducer\nimport { reducer as cartReducer } from './Datapassing'\n\n\nconst rootReducer = combineReducers({\n\t//add feature reducer\n\tDatapassing: cartReducer,\n\t\n})\n\nexport { rootReducer }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { rootReducer } from './Redux/rootReducer'\n\nconst store = configureStore({\n\treducer: rootReducer\n})\n\n\n\nReactDOM.render( <Provider store={store}><App /></Provider>,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}